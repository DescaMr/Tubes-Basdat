--membuat tabel
CREATE TABLE customers (
  id SERIAL PRIMARY KEY,
  name VARCHAR(100),
  email VARCHAR(100)
);

CREATE TABLE laptops (
  id SERIAL PRIMARY KEY,
  brand VARCHAR(100),
  model VARCHAR(100),
  price NUMERIC(15, 2)
);

CREATE TABLE orders (
  id SERIAL PRIMARY KEY,
  customer_id INTEGER REFERENCES customers (id),
  laptop_id INTEGER REFERENCES laptops (id),
  quantity INTEGER,
  order_date DATE
);

--store procedure--

--menambah pelanggan baru
CREATE OR REPLACE PROCEDURE add_customer(
  customer_name VARCHAR(100),
  customer_email VARCHAR(100)
)
AS $$
BEGIN
  INSERT INTO customers (name, email)
  VALUES (customer_name, customer_email);
  
  COMMIT;
END;
$$ LANGUAGE plpgsql;

--menambah laptop baru
CREATE OR REPLACE PROCEDURE add_laptop(
  laptop_brand VARCHAR(100),
  laptop_model VARCHAR(100),
  laptop_price NUMERIC(10, 2)
)
AS $$
BEGIN
  INSERT INTO laptops (brand, model, price)
  VALUES (laptop_brand, laptop_model, laptop_price);
  
  COMMIT;
END;
$$ LANGUAGE plpgsql;

--menambah pesanan baru
CREATE OR REPLACE PROCEDURE add_order(
  customer_id INTEGER,
  laptop_id INTEGER,
  order_quantity INTEGER,
  order_date DATE
)
AS $$
BEGIN
  INSERT INTO orders (customer_id, laptop_id, quantity, order_date)
  VALUES (customer_id, laptop_id, order_quantity, order_date);
  
  COMMIT;
END;
$$ LANGUAGE plpgsql;

--mengupdate pelanggan
CREATE OR REPLACE PROCEDURE update_customer(
  customer_id INTEGER,
  customer_name VARCHAR(100),
  customer_email VARCHAR(100)
)
AS $$
BEGIN
  UPDATE customers
  SET name = customer_name, email = customer_email
  WHERE id = customer_id;
  
  COMMIT;
END;
$$ LANGUAGE plpgsql;

--mengupdate laptop
CREATE OR REPLACE PROCEDURE update_laptop(
  laptop_id INTEGER,
  laptop_brand VARCHAR(100),
  laptop_model VARCHAR(100),
  laptop_price NUMERIC(10, 2)
)
AS $$
BEGIN
  UPDATE laptops
  SET brand = laptop_brand, model = laptop_model, price = laptop_price
  WHERE id = laptop_id;
  
  COMMIT;
END;
$$ LANGUAGE plpgsql;

--menghapus data tabel pesanan
CREATE OR REPLACE PROCEDURE delete_order(
  order_id INTEGER
)
AS $$
BEGIN
  DELETE FROM orders
  WHERE id = order_id;
  
  COMMIT;
END;
$$ LANGUAGE plpgsql;

--menghapus data tabel laptop
CREATE OR REPLACE PROCEDURE delete_laptop(
  laptop_id INTEGER
)
AS $$
BEGIN
  DELETE FROM laptops
  WHERE id = laptops_id;
  
  COMMIT;
END;
$$ LANGUAGE plpgsql;

--menghapus data tabel customer
CREATE OR REPLACE PROCEDURE delete_customer(
  customer_id INTEGER
)
AS $$
BEGIN
  DELETE FROM customers
  WHERE id = customer_id;
  
  COMMIT;
END;
$$ LANGUAGE plpgsql;

--menghapus data dari tabel order_details
CREATE OR REPLACE PROCEDURE delete_order_detail(order_id INTEGER)
AS $$
BEGIN
  DELETE FROM order_details WHERE id = order_id;
END;
$$ LANGUAGE plpgsql;


--memanggil procedure
--menambah data
CALL add_customer('Kakasep', 'kakasep46@gmail.com');
CALL add_laptop('LENOVO','THINKPAD',5000000);
CALL add_order(2,2,4, '2023-05-28');

--mengedit data
CALL update_customer(1,'narutong', 'narutong46@gmail.com');
CALL update_laptop(1,'ASUS','STRIX',30000000);

--menghapus data
CALL delete_customer;
CALL delete_laptop;
CALL delete_order(2);
CALL delete_order_detail(1);


--membuat tabel baru untuk melihat detail dari tabel inner join
CREATE TABLE order_details AS
SELECT orders.id, customers.name AS customer_name, laptops.brand, laptops.model, orders.quantity, orders.order_date
FROM orders
INNER JOIN customers ON orders.customer_id = customers.id
INNER JOIN laptops ON orders.laptop_id = laptops.id;

--melihat data tabel
select * from customers
select * from laptops
select * from orders
select * from order_details
